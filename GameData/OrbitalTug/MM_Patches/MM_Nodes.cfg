// OrbitalTug
// nodes v 0.16
// 12 Jun 19

@PART[OrbitalGrapplerJR]:NEEDS[OrbitalTug]:FOR[OrbitalTug] {
	node_stack_PortFwdWheel = -0.626,-0.63,0,-1,0,0, 0
	node_stack_PortMidWheel = -0.626,0,0,-1,0,0, 0
	node_stack_PortAftWheel = -0.626,0.63,0,-1,0,0, 0
	node_stack_StbdFwdWheel = 0.626,-0.63,0,1,0,0,0
	node_stack_StbdMidWheel = 0.626,0,0,1,0,0,0
	node_stack_StbdAftWheel = 0.626,0.63,0,1,0,0,0
	node_stack_DorsFwdWheel = 0,-0.63,-0.6,0,-1,0,0
	node_stack_DorsMidWheel = 0,0,-0.6,0,-1,0,0
	node_stack_DorsAftWheel = 0,0.63,-0.6,0,-1,0,0
	node_stack_120PortMid =  -0.5534,0,0.3195, -1,0,0.6,0
	node_stack_120StbdMid =  0.5534,0,0.3195,   1,0,0.6,0
	node_stack_120DorsMid =  0,0,-0.63, 0,0,-1,0
	node_stack_behindGrappler = 0, -0.53, 0.58, 0,0,1,0

	MODULE:NEEDS[B9PartSwitch] {
		name = ModuleB9PartSwitch
		moduleID = sideNodes
		SUBTYPE {
			name = Triple Nodes
			node = PortFwdWheel
			node = PortMidWheel
			node = PortAftWheel
			node = StbdFwdWheel
			node = StbdMidWheel
			node = StbdAftWheel
			node = DorsFwdWheel
			node = DorsMidWheel
			node = DorsAftWheel
			node = behindGrappler
		}
		SUBTYPE {
			name = Wheel Nodes
			node = PortFwdWheel
			node = PortMidWheel
			node = PortAftWheel
			node = StbdFwdWheel
			node = StbdMidWheel
			node = StbdAftWheel
			node = behindGrappler
		}
		SUBTYPE {
			name = 120 Degree Nodes
			node = 120PortMid
			node = 120StbdMid
			node = 120DorsMid
			node = behindGrappler
			stackSymmetry = 2
		}
		SUBTYPE {
			name = Spine Nodes
			node = DorsFwdWheel
			node = DorsMidWheel
			node = DorsAftWheel
			
			node = behindGrappler
			stackSymmetry = 0
		}
		SUBTYPE {
			name = No Nodes
		}
	}
	%CrewCapacity = 1
	%minimumCrew = 1
}

// add attachment nodess to OrbitalTugCore
// if B9PartSwitch installed, set up 4/2/0 node switch
// change node size from 2 to 1 to match rest of parts
@PART[OrbitalTugCore]:NEEDS[OrbitalTug]:FOR[OrbitalTug] {
   @node_stack_top = 0, 0.76, 0, 0, 1, 0, 1
   @node_stack_bottom = 0, -0.76, 0, 0, -1, 0, 1
	// add additional nodes
	node_stack_connect01 = 0.63, 0, 0, 1,0,0,	1
	node_stack_connect02 = -0.63, 0, 0, -1,0,0,	1
	node_stack_connect03 = 0, 0, 0.63, 0,0,1,	1
	node_stack_connect04 = 0, 0, -0.63, 0,0,-1,	1
	
	MODULE:NEEDS[B9PartSwitch] 	{
		name = ModuleB9PartSwitch
		moduleID = sideNodes
		SUBTYPE {
			name = Quad Nodes
			node = top
			node = bottom
			node = connect01
			node = connect02
			node = connect03
			node = connect04
			stackSymmetry = 3
		}
		SUBTYPE {
			name = Dual Nodes
			node = top
			node = bottom
			node = connect01
			node = connect02
			stackSymmetry = 1
		}       
		SUBTYPE {
			name = No Nodes
			node = top
			node = bottom
			stackSymmetry = 0
		}
	}	
}

// Add Attachment nodes to engineOnArm
// Correct attachRules to allow node attachment
// if B9PartSwitch installed, set up 3/1 node switch
@PART[engineOnArm]:NEEDS[OrbitalTug]:FOR[OrbitalTug] {
	node_stack_connectMain01 = 0,0,0.3, 0,0,1,1
	
	node_stack_S01 = 0,0.3 ,0.3, 0,0,-1,0
	node_stack_S02 = 0,-0.45 ,0.24, 0,0,-1,0
	
	@attachRules = 1,1,1,0,0
	
	MODULE:NEEDS[B9PartSwitch]	{
	name = ModuleB9PartSwitch
	moduleID = hiddenNodes
		SUBTYPE {
			name = No Nodes
			node = connectMain01
		}
		SUBTYPE {
			name = Extra Nodes
			node = connectMain01
			node = S01
			node = S02
			stackSymmetry = 3
		}
	}
}

// Add Attachment nodes to helperDrone
// Correct attachRules to allow node attachment
// if B9PartSwitch installed, set up 2/1 node switch
@PART[helperDrone]:NEEDS[OrbitalTug]:FOR[OrbitalTug] {
	node_stack_top = 0.0, 0.22, 0.0, 0,1,0,0
	node_stack_bottom = 0.0, -0.2, 0.0, 0,-1,0,0
	
	@attachRules = 1,1,1,0,0
	
	MODULE:NEEDS[B9PartSwitch]	{
	name = ModuleB9PartSwitch
	moduleID = hiddenNodes
		SUBTYPE {
			name = Bottom Node
			node = bottom
		}
		SUBTYPE {
			name = Both Nodes
			node = top
			node = bottom
		}
		SUBTYPE {
			name = Top Nodes
			node = top
		}
		SUBTYPE {
			name = No Nodes
		}
	}
}

// Add Attachment nodes to DronePod
// Correct attachRules to allow node attachment
// if B9PartSwitch installed, set up 7/5/3/1 node switch
@PART[DronePod]:NEEDS[OrbitalTug]:FOR[OrbitalTug]
{
	node_stack_SidesAft01 = -0.58, 0.0, 0.0, -1,0,0,0
	node_stack_SidesAft02 = 0.58, 0.0, 0.0, 1,0,0,0
	node_stack_SidesMid03 = -0.54, 0.4, 0.0, -1,0,0,0
	node_stack_SidesMid04 = 0.54, 0.4, 0.0, 1,0,0,0
	node_stack_SidesFwd05 = -0.38, 0.8, 0.0, 0,1,0,0
	node_stack_SidesFwd06 = 0.38, 0.8, 0.0, 0,1,0,0
	// inside cargo bays facing out
	node_stack_CargoBayDors01 =  0.3, 0.5, -0.1, 0,0,-1, 0
	node_stack_CargoBayDors02 =  0.0, 0.5, -0.1, 0,0,-1, 0
	node_stack_CargoBayDors03 = -0.3, 0.5, -0.1, 0,0,-1, 0
	node_stack_CargoBayDors04 =  0.3, 0.7, -0.1, 0,0,-1, 0
	node_stack_CargoBayDors05 =  0.0, 0.7, -0.1, 0,0,-1, 0
	node_stack_CargoBayDors06 = -0.3, 0.7, -0.1, 0,0,-1, 0
	node_stack_CargoBayDors07 =  0.3, 0.3, -0.1, 0,0,-1, 0
	node_stack_CargoBayDors08 =  0.0, 0.3, -0.1, 0,0,-1, 0
	node_stack_CargoBayDors09 = -0.3, 0.3, -0.1, 0,0,-1, 0
	
	node_stack_CargoBayVent01 =  0.3, 0.5, 0.1, 0,0,1, 0
	node_stack_CargoBayVent02 =  0.0, 0.5, 0.1, 0,0,1, 0
	node_stack_CargoBayVent03 = -0.3, 0.5, 0.1, 0,0,1, 0
	node_stack_CargoBayVent04 =  0.3, 0.7, 0.1, 0,0,1, 0
	node_stack_CargoBayVent05 =  0.0, 0.7, 0.1, 0,0,1, 0
	node_stack_CargoBayVent06 = -0.3, 0.7, 0.1, 0,0,1, 0
	node_stack_CargoBayVent07 =  0.3, 0.3, 0.1, 0,0,1, 0
	node_stack_CargoBayVent08 =  0.0, 0.3, 0.1, 0,0,1, 0
	node_stack_CargoBayVent09 = -0.3, 0.3, 0.1, 0,0,1, 0
	// inside cargo bay - facing forward
	node_stack_CargoBayAftDors07 = 0.0, 0.15, -0.4, 0,1,0, 0
	node_stack_CargoBayAftDors08 = 0.34, 0.15, -0.19, 0,1,0, 0
	node_stack_CargoBayAftDors09 = -0.34, 0.15, -0.19, 0,1,0, 0
	node_stack_CargoBayAftVent10 = 0.0, 0.15, 0.4, 0,1,0, 0
	node_stack_CargoBayAftVent11 = 0.34, 0.15, 0.19, 0,1,0, 0
	node_stack_CargoBayAftVent12 = -0.34, 0.15, 0.19, 0,1,0, 0
	// outside base facing out
	node_stack_AftDors13 = 0.0, -0.02, -0.63, 0,0,-1,0
	node_stack_AftVent14 = 0.0, -0.02,  0.63, 0,0,1, 0
	
	@attachRules = 1,1,1,0,0
	
	MODULE:NEEDS[B9PartSwitch]	{
		name = ModuleB9PartSwitch
		moduleID = noNodes
		SUBTYPE {
			name = No Nodes
			node = AftDors13
			node = AftVent14
		}
		SUBTYPE {
			name = Bottom 
			node = SidesAft01
			node = SidesAft02
			node = AftDors13
			node = AftVent14
			stackSymmetry = 2
		}
		SUBTYPE {
			name = Botom Mid 
			node = SidesAft01
			node = SidesAft02
			node = SidesMid03
			node = SidesMid04
			node = AftDors13
			node = AftVent14
			stackSymmetry = 2
		}
		SUBTYPE {
			name = Botom Mid Top 
			node = SidesAft01
			node = SidesAft02
			node = SidesMid03
			node = SidesMid04
			node = SidesFwd05
			node = SidesFwd06
			node = AftDors13
			node = AftVent14
			stackSymmetry = 2
		}
		SUBTYPE {
			name = Inside Back Bay 
			node = CargoBayAftDors07
			node = CargoBayAftDors08
			node = CargoBayAftDors09
			node = CargoBayAftVent10
			node = CargoBayAftVent11
			node = CargoBayAftVent12
			node = AftDors13
			node = AftVent14
			stackSymmetry = 2
		}
		SUBTYPE {
			name = Sides and Inside Aft Bay
			node = SidesAft01
			node = SidesAft02
			node = SidesMid03
			node = SidesMid04
			node = SidesFwd05
			node = SidesFwd06
			node = CargoBayAftDors07
			node = CargoBayAftDors08
			node = CargoBayAftDors09
			node = CargoBayAftVent10
			node = CargoBayAftVent11
			node = CargoBayAftVent12
			node = AftDors13
			node = AftVent14
			stackSymmetry = 2
		}
		SUBTYPE {
			name = All Nodes // Bill and Bob went nutz
			node = SidesAft01
			node = SidesAft02
			node = SidesMid03
			node = SidesMid04
			node = SidesFwd05
			node = SidesFwd06
			node = CargoBayDors01
			node = CargoBayDors02
			node = CargoBayDors03
			node = CargoBayDors04
			node = CargoBayDors05
			node = CargoBayDors06
			node = CargoBayDors07
			node = CargoBayDors08
			node = CargoBayDors09
			node = CargoBayVent01
			node = CargoBayVent02
			node = CargoBayVent03
			node = CargoBayVent04
			node = CargoBayVent05
			node = CargoBayVent06
			node = CargoBayVent07
			node = CargoBayVent08
			node = CargoBayVent09
			node = CargoBayAftDors07
			node = CargoBayAftDors08
			node = CargoBayAftDors09
			node = CargoBayAftVent10
			node = CargoBayAftVent11
			node = CargoBayAftVent12
			node = AftDors13
			node = AftVent14
			stackSymmetry = 2
		}
	}
}

// Add Attachment nodes to OrbitalTugPod
// Correct attachRules to allow node attachment
// if B9PartSwitch installed, set up 7/5/3/1 node switch
@PART[OrbitalTugPod]:NEEDS[OrbitalTug]:FOR[OrbitalTug]
{
	node_stack_AftMid = -0.58, 0.0, 0.0, -1,0,0,0
	node_stack_AftMid = 0.58, 0.0, 0.0, 1,0,0,0
	node_stack_MidMid = -0.5, 0.4, 0.0, -1,0,0,0
	node_stack_MidMid = 0.5, 0.4, 0.0, 1,0,0,0
	node_stack_FwdMid = -0.31, 0.87, 0.0, 0,1,0,0
	node_stack_FwdMid = 0.31, 0.87, 0.0, 0,1,0,0
	// outside base facing out
	node_stack_MidAftTop = 0.0, -0.02, -0.63, 0,0,-1, 0
	node_stack_MidAftBottom = 0.0, -0.02, 0.63, 0,0,-1, 0

	@attachRules = 1,1,1,0,0
	
	MODULE:NEEDS[B9PartSwitch]	{
	name = ModuleB9PartSwitch
	moduleID = noNodes
		SUBTYPE {
			name = No Nodes
			name = MidAftTop
			name = MidAftBottom
		}
		SUBTYPE {
			name = Aft Nodes
			node = AftMid
			node = AftMid
			name = MidAftTop
			name = MidAftBottom
			stackSymmetry = 2
		}
		SUBTYPE {
			name = Aft Mid Nodes
			node = MidMid
			node = MidMid
			node = MidMid
			node = MidMid
			name = MidAftTop
			name = MidAftBottom
			stackSymmetry = 2
		}
		SUBTYPE {
			name = All Nodes
			node = AftMid
			node = AftMid
			node = MidMid
			node = MidMid
			node = FwdMid
			node = FwdMid
			name = MidAftTop
			name = MidAftBottom
			stackSymmetry = 2
		}
	}
}

// Add Attachment nodes to fwdAdaptor
// Correct attachRules to allow node attachment
// if B9PartSwitch installed, set up ?? node switch
@PART[fwdAdaptor]:NEEDS[OrbitalTug]:FOR[OrbitalTug] {
	// correct node orientation
	@node_stack_mid = 	0,-0.01,0, 0,1,0, 1

	// lower carrier inside core
	node_stack_BayCoreAft01 = -0.09, -0.35, -0.09, -1,0,-1,0
	node_stack_BayCoreAft02 = 0.09, -0.35, 0.09, 1,0,1,0
	node_stack_BayCoreAft03 = 0.09, -0.35, -0.09, 1,0,-1,0
	node_stack_BayCoreAft04 = -0.09, -0.35, 0.09, -1,0,1,0
	// lower carrier outside
	//node_stack_AftOut01 = -0.63, -0.35, -0, -1,0,0,0
	//node_stack_AftOut02 = 0.63, -0.35, 0, 1,0,0,0
	node_stack_AftOut03 = 0, -0.35, -0.63, 0,0,-1,0
	node_stack_AftOut04 = 0, -0.35, 0.63, 0,0,1,0
	// add nodes to outside of poles
	// lower outer
	node_stack_frameOutAft05 = -0.37, 0, -0.63, -.8,0,-.9,0
	node_stack_frameOutAft06 =  0.37, 0, 0.63, .8,0,.9,0
	node_stack_frameOutAft07 = -0.37, 0, 0.63, -.8,0,.9,0
	node_stack_frameOutAft08 =  0.37, 0, -0.63, .8,0,-.9,0
		// mid outer
	node_stack_frameOutMid09 = -0.37, 0.6, -0.63, -.8,0,-.9,0
	node_stack_frameOutMid10 =  0.37, 0.6, 0.63, -.8,0,-.9,0
	node_stack_frameOutMid11 = -0.37, 0.6, 0.63, -.8,0,.9,0
	node_stack_frameOutMid12 =  0.37, 0.6, -0.63, .8,0,-.9,0
	// upper outer
	node_stack_frameOutFwd13 = -0.37, 1.2, -0.63, -.8,0,-.9,0
	node_stack_frameOutFwd14 =  0.37, 1.2, 0.63, .8,0,.9,0
	node_stack_frameOutFwd15 = -0.37, 1.2, 0.63, -.8,0,.9,0
	node_stack_frameOutFwd16 =  0.37, 1.2, -0.63, .8,0,-.9,0
	// add nodes to inside of poles
	// lower inside
	node_stack_frameInFwd05 = -0.27, 1.2, -0.53, 0.8, 0, 0.9,0
	node_stack_frameInFwd06 =  0.27, 1.2,  0.53, -0.8, 0, -0.9,0
	node_stack_frameInFwd07 = -0.27, 1.2,  0.53, 0.8,  0, -0.9,0
	node_stack_frameInFwd08 =  0.27, 1.2, -0.53, -0.8, 0, 0.9,0
	// mid inside
	node_stack_frameInMid09 = -0.35, 0.6, -0.57,  0.8, 0,.9,0
	node_stack_frameInMid10 =  0.35, 0.6,  0.57, -.8,0,-.9,0
	node_stack_frameInMid11 = -0.35, 0.6,  0.57, .8,0,-.9,0
	node_stack_frameInMid12 =  0.35, 0.6, -0.57,  -.8,0,.9,0
	// upper inside
	node_stack_frameInAft13 = -0.35, 0.2, -0.57, 0.8, 0,.9,0
	node_stack_frameInAft14 = 0.35, 0.2,  0.57, -.8,0,-.9,0
	node_stack_frameInAft15 = -0.35, 0.2,  0.57, .8,0,-.9,0
	node_stack_frameInAft16 = 0.35, 0.2, -0.57, -.8,0,.9,0
	
	MODULE:NEEDS[B9PartSwitch]	
	{
		name = ModuleB9PartSwitch
		moduleID = Nodes
		SUBTYPE {
			name = All
			node = BayCoreAft01
			node = BayCoreAft02
			node = BayCoreAft03
			node = BayCoreAft04
			node = AftOut03
			node = AftOut04
			node = frameOutAft05
			node = frameOutAft06
			node = frameOutAft07
			node = frameOutAft08
			node = frameOutMid09
			node = frameOutMid10
			node = frameOutMid11
			node = frameOutMid12
			node = frameOutFwd13
			node = frameOutFwd14
			node = frameOutFwd15
			node = frameOutFwd16
			node = frameInFwd05
			node = frameInFwd06
			node = frameInFwd07
			node = frameInFwd08
			node = frameInMid09
			node = frameInMid10
			node = frameInMid11
			node = frameInMid12
			node = frameInAft13
			node = frameInAft14
			node = frameInAft15
			node = frameInAft16
			stackSymmetry = 2
		}
		SUBTYPE {
			name = Inside
			node = BayCoreAft01
			node = BayCoreAft02
			node = BayCoreAft03
			node = BayCoreAft04
			node = AftOut03
			node = AftOut04
			node = frameInFwd05
			node = frameInFwd06
			node = frameInFwd07
			node = frameInFwd08
			node = frameInMid09
			node = frameInMid10
			node = frameInMid11
			node = frameInMid12
			node = frameInAft13
			node = frameInAft14
			node = frameInAft15
			node = frameInAft16
			stackSymmetry = 2
		}
		SUBTYPE {
			name = Outside
			node = BayCoreAft01
			node = BayCoreAft02
			node = BayCoreAft03
			node = BayCoreAft04
			node = AftOut03
			node = AftOut04
			node = frameOutAft05
			node = frameOutAft06
			node = frameOutAft07
			node = frameOutAft08
			node = frameOutMid09
			node = frameOutMid10
			node = frameOutMid11
			node = frameOutMid12
			node = frameOutFwd13
			node = frameOutFwd14
			node = frameOutFwd15
			node = frameOutFwd16
			stackSymmetry = 2
		}
		SUBTYPE {
			name = Base nodes
			node = BayCoreAft01
			node = BayCoreAft02
			node = BayCoreAft03
			node = BayCoreAft04
			node = AftOut03
			node = AftOut04
			stackSymmetry = 2
		}
		SUBTYPE {
			name = No nodes
		}
	}
}

// Add Attachment nodes to adaptorCarrier
// Correct attachRules to allow node attachment
// if B9PartSwitch installed, set up ?? node switch
@PART[adaptorCarrier]:NEEDS[OrbitalTug]:FOR[OrbitalTug] 
{
	// correct node orientation
	@node_stack_mid = 0,-0.01,0, 0,1,0, 1 

	// helperpods
	node_stack_helperDockAftIn01 = -0.14, -0.35, -0.15, -1,0,-1,0
	node_stack_helperDockAftIn02 = 0.14, -0.35, 0.15, 1,0,1,0
	node_stack_helperDockAftIn03 = 0.14, -0.35, -0.15, 1,0,-1,0
	node_stack_helperDockAftIn04 = -0.14, -0.35, 0.15, -1,0,1,0
	// lower carrier outside
	node_stack_AftOut01 = -0.63, -0.35, -0, -1,0,0,0
	node_stack_AftOut02 = 0.63, -0.35, 0, 1,0,0,0
	node_stack_AftOut03 = 0, -0.35, -0.63, 0,0,-1,0
	node_stack_AftOut04 = 0, -0.35, 0.63, 0,0,1,0
	// add nodes to outside of poles
	// upper outer
	node_stack_frameOutFwd05 = -0.37, 1.2, -0.63, -.8,0,-.9,0
	node_stack_frameOutFwd06 =  0.37, 1.2, 0.63, .8,0,.9,0
	node_stack_frameOutFwd07 = -0.37, 1.2, 0.63, -.8,0,.9,0
	node_stack_frameOutFwd08 =  0.37, 1.2, -0.63, .8,0,-.9,0
	// mid outer
	node_stack_frameOutMid09 = -0.382, 0.6, -0.642, -.8,0,-.9,0
	node_stack_frameOutMid10 =  0.382, 0.6, 0.642, .8,0,.9,0
	node_stack_frameOutMid11 = -0.382, 0.6, 0.642, -.8,0,.9,0
	node_stack_frameOutMid12 =  0.382, 0.6, 0.642, .8,0,-.9,0
	// lower outer
	node_stack_frameOutAft13 = -0.37, 0, -0.63, -.8,0,-.9,0
	node_stack_frameOutAft14 =  0.37, 0, 0.63, .8,0,.9,0
	node_stack_frameOutAft15 = -0.37, 0, 0.63, -.8,0,.9,0
	node_stack_frameOutAft16 =  0.37, 0, -0.63, .8,0,-.9,0
	// add nodes to inside of poles
	// lower inside
	node_stack_frameInFwd05 = -0.27, 1.2, -0.53, 	 0.8, 0, 0.9,0
	node_stack_frameInFwd06 =  0.27, 1.2,  0.53, 	-0.8, 0, -0.9,0
	node_stack_frameInFwd07 = -0.27, 1.2,  0.53, 	0.8,  0, -0.9,0
	node_stack_frameInFwd08 =  0.27, 1.2, -0.53,  	-0.8, 0, 0.9,0
	// mid inside
	node_stack_frameInMid09 = -0.35, 0.6, -0.57,  0.8, 0,.9,0
	node_stack_frameInMid10 =  0.35, 0.6,  0.57, -.8,0,-.9,0
	node_stack_frameInMid11 = -0.35, 0.6,  0.57, .8,0,-.9,0
	node_stack_frameInMid12 =  0.35, 0.6, -0.57,  -.8,0,.9,0
	// upper inside
	node_stack_frameInAft13 = -0.35, 0.2, -0.57, 0.8, 0,.9,0
	node_stack_frameInAft14 = 0.35, 0.2,  0.57, -.8,0,-.9,0
	node_stack_frameInAft15 = -0.35, 0.2,  0.57, .8,0,-.9,0
	node_stack_frameInAft16 = 0.35, 0.2, -0.57, -.8,0,.9,0
	
	MODULE:NEEDS[B9PartSwitch]	
	{
		name = ModuleB9PartSwitch
		moduleID = Nodes
		SUBTYPE {
			name = All
			node = helperDockAftIn01
			node = helperDockAftIn02
			node = helperDockAftIn03
			node = helperDockAftIn04
			node = AftOut01
			node = AftOut02
			node = AftOut03
			node = AftOut04
			node = frameOutFwd05
			node = frameOutFwd06
			node = frameOutFwd07
			node = frameOutFwd08
			node = frameOutMid09
			node = frameOutMid10
			node = frameOutMid11
			node = frameOutMid12
			node = frameOutAft13
			node = frameOutAft14
			node = frameOutAft15
			node = frameOutAft16
			node = frameInFwd05
			node = frameInFwd06
			node = frameInFwd07
			node = frameInFwd08
			node = frameInMid09
			node = frameInMid10
			node = frameInMid11
			node = frameInMid12
			node = frameInAft13
			node = frameInAft14
			node = frameInAft15
			node = frameInAft16
			stackSymmetry = 2
		}
		SUBTYPE {
			name = Inside
			node = helperDockAftIn01
			node = helperDockAftIn02
			node = helperDockAftIn03
			node = helperDockAftIn04
			node = AftOut01
			node = AftOut02
			node = AftOut03
			node = AftOut04
			node = frameInFwd05
			node = frameInFwd06
			node = frameInFwd07
			node = frameInFwd08
			node = frameInMid09
			node = frameInMid10
			node = frameInMid11
			node = frameInMid12
			node = frameInAft13
			node = frameInAft14
			node = frameInAft15
			node = frameInAft16
			stackSymmetry = 2
		}
		SUBTYPE {
			name = Outside
			node = helperDockAftIn01
			node = helperDockAftIn02
			node = helperDockAftIn03
			node = helperDockAftIn04
			node = AftOut01
			node = AftOut02
			node = AftOut03
			node = AftOut04
			node = frameOutFwd05
			node = frameOutFwd06
			node = frameOutFwd07
			node = frameOutFwd08
			node = frameOutMid09
			node = frameOutMid10
			node = frameOutMid11
			node = frameOutMid12
			node = frameOutAft13
			node = frameOutAft14
			node = frameOutAft15
			node = frameOutAft16
			stackSymmetry = 2
		}
		SUBTYPE {
			name = Helper Dock Only
			node = helperDockAftIn01
			node = helperDockAftIn02
			node = helperDockAftIn03
			node = helperDockAftIn04
			node = AftOut01
			node = AftOut02
			node = AftOut03
			node = AftOut04
		}
		SUBTYPE {
			name = Plain
		}
	}
}

// zer0Kerbal
// CC-BY-NC-SA-4.0 
